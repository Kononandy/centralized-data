trouver le moyen de liée des wallet via debank à un dune de traitement premier 
décortiquer les data et les ordonner pour pouvoir traiter 2 différent algo 
 > 1 pour la vérifications des contract et la mise en page d'un ratio de risque noté de 1 à 10 
 > 1 pour un résumé épuré des actions prise ( entré et sortis ) 
 > for incentives need patnership
for th emoment i creat nft hype but i have solution to fork easily

upside the front end on testnet
first view of possible to choice reward 
 import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameterName;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;
import org.web3j.tx.gas.DefaultGasProvider;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.List;

public class LiquidityPoolRewardContract extends Contract {

    public LiquidityPoolRewardContract(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider gasProvider) {
        super("", contractAddress, web3j, credentials, gasProvider);
    }

    public RemoteFunctionCall<TransactionReceipt> setReward(BigInteger rewardAmount) {
        Function function = new Function(
                "setReward",
                Arrays.asList(new Uint256(rewardAmount)),
                Collections.emptyList()
        );

        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<BigInteger> getReward() {
        Function function = new Function(
                "getReward",
                Collections.emptyList(),
                Arrays.asList(new TypeReference<Uint256>() {})
        );

        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public static LiquidityPoolRewardContract deploy(Web3j web3j, Credentials credentials, ContractGasProvider gasProvider) throws Exception {
        return deploy(LiquidityPoolRewardContract.class, web3j, credentials, gasProvider);
    }
}
try to find a new test ; it's come around mi octobre
suppose to add a multiple call not easy as to said it kk 
but i'm patiently wait for IA to be stronger and make it ofr cent better then i will in year
no find any power than not be sandwiche buy jared like , demonstration soon
cause track wallet and insiders can be powerful too 
force to th eg who dosen't find way to reduce gaz cost except work on base
nothing can undel the power of this script.
u have the integrale slected moove from old wallet who's make win cause their insiders

the efficient need to pass by a tier services. dev the bridge of data it's too much work for 1 person, that not good for long term, but to backtesting is enough
problem come from the relayer that make mistake often cause the tx fail and lost of network fees funds , that's not interressant
waita minute
look's like no prblm from latest test 
hello there :) 
aint 'no sunshine were she's go 
